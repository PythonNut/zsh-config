#compdef pianoteq
#
# Pianoteq version 4.1.0/20120713 -- http://www.pianoteq.com
#
# via the following wrapper:
#
#   #!/bin/sh
#   exec /Applications/Pianoteq\ 4/Pianoteq\ 4.app/Contents/MacOS/Pianoteq\ 4  \
#     --headless --play-and-quit "$@"
#
# Note that CLI use for Pianoteq is a bit buggy, may crash randomly,
# flicker active application, etc. "--midi foo.midi" is probably a
# mandatory option, but that can be handled by the human. I hope.

local curcontext="$curcontext" state line
typeset -A opt_args

# There is this option, but will use it like never, and --midi every
# time, so exclude what will only be an annoying false positive.
#
# '--midimapping=[load midimapping preset]:mapping:' \
_arguments \
  '(- *)--help[display help]' \
  '(- *)--version[display version]' \
  '--no-prefs[start without prefs]' \
  '--no-audio-prefs[clean audio/midi config]' \
  '--prefs+[prefs file]:preferences:_files' \
  '--fxp+[FXP file]:fxpfile:_files' \
  '--preset+[named preset]:presets:->presets' \
  '--list-presets[show all presets]' \
  '--midi+[input MIDI file]:midifile:_files' \
  '--wav+[output WAV]:wavfile:_files' \
  '--rate+[sample rate for WAV]:rate:' \
  '--bit-depth+[bit depth for WAV]:bitdepth:(16 24 32)' \
  '--mono[export WAV as mono]' \
  && return 0

case "$state" in
  presets)
    _wanted mode expl 'presets' compadd ${(f)"$(_call_program presets pianoteq --list-presets)"}
  ;;
esac
