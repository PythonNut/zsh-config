#compdef honcho

typeset -A opt_args
local context state line

_honcho() {
  _arguments -s -S \
    "(-h --help)"{-h,--help}"[show this help message and exit]:" \
    "(-v --version)"{-v,--version}"[show program's version number and exit]:" \
    "*::honcho commands:_honcho_command"
}

(( $+functions[_honcho_command] )) ||
_honcho_command() {
  local ret=1

  if (( CURRENT == 1 )); then
    _values "honcho sub command" \
      "check[Validate your application\'s Procfile]" \
      "export[Export the application to another process management format]" \
      "help[Describe available tasks or one specific task]" \
      "run[Run a command using your application's environment]" \
      "start[Start the application (or a specific PROCESS)]"
  else
    local curcontext="$curcontext"
    _call_function ret _honcho_$words[1];
  fi

  return ret;
}

(( $+functions[_honcho_check] )) ||
_honcho_check() {
  _arguments -s \
    "(-h --help)"{-h,--help}"[show this help message and exit]:" \
    "(-e --env)"{-e,--env}"[Environment file\[,file\] (default: .env)]:file:_files" \
    "(-d --app-root)"{-d,--app-root}"[Procfile directory (default: .)]:direcotry:_directories" \
    "(-f --procfile)"{-f,--procfile}"[Procfile path (default: Procfile)]:file:_files" \
    "*::honcho commands:_honcho"
}

(( $+functions[_honcho_export] )) ||
_honcho_export() {
  local -a curdir

  _arguments -s \
    "(-h --help)"{-h,--help}"[show this help message and exit]:" \
    "(-e --env)"{-e,--env}"[Environment file\[,file\] (default: .env)]:file:_files" \
    "(-d --app-root)"{-d,--app-root}"[Procfile directory (default: .)]:direcotry:_directories" \
    "(-f --procfile)"{-f,--procfile}"[Procfile path (default: Procfile)]:file:_files" \
    "(-u --user)"{-u,--user}"[Specify the user the application should run as (default: you)]:user:_users" \
    "(-p --port)"{-p,--port}"[port number]" \
    "(-s --shell)"{-s,--shell}"[Specify the shell that should run the application (defalut: /bin/sh)]" \
    "(-c --concurrency)"{-c,--concurrency}"[The number of each process type to run. (default: None) (format: process=num,process=num)]:proc:_gnu_generic" \
    "(-l --log)"{-l,--log}"[Specify the directory to place process logs in (defalut: /var/log/APP)]:directory:_directories" \
    "(-a --app)"{-a,--app}"[Alternative app name (default: current-dirname)]:directory:_directories" \
    "*::honcho commands:_honcho"

  _values "FORMAT" \
    "upstart"
}

(( $+functions[_honcho_help] )) ||
_honcho_help() {
  _arguments -s \
    "(-h --help)"{-h,--help}"[show this help message and exit]:" \
    "(-e --env)"{-e,--env}"[Environment file\[,file\] (default: .env)]:file:_files" \
    "(-d --app-root)"{-d,--app-root}"[Procfile directory (default: .)]:direcotry:_directories" \
    "(-f --procfile)"{-f,--procfile}"[Procfile path (default: Procfile)]:file:_files" \
    "*::honcho commands:_honcho"

  local -a cmds
  cmds=('check' 'export' 'help' 'run' 'start')
  _describe -t commands "help's command" cmds
}

(( $+functions[_honcho_run] )) ||
_honcho_run() {
  _arguments -s \
    "(-h --help)"{-h,--help}"[show this help message and exit]:" \
    "(-e --env)"{-e,--env}"[Environment file\[,file\] (default: .env)]:file:_files" \
    "(-d --app-root)"{-d,--app-root}"[Procfile directory (default: .)]:direcotry:_directories" \
    "(-f --procfile)"{-f,--procfile}"[Procfile path (default: Procfile)]:file:_files" \
    "(-p --port)"{-p,--port}"[port number]" \
    "(-c --concurrency)"{-c,--concurrency}"[The number of each process type to run. (default: None) (format: process=num,process=num)]:proc:_gnu_generic" \
    "*::honcho commands:_honcho"
}

(( $+functions[_honcho_start] )) ||
_honcho_start() {
  _arguments -s \
    "(-h --help)"{-h,--help}"[show this help message and exit]:" \
    "(-e --env)"{-e,--env}"[Environment file\[,file\] (default: .env)]:file:_files" \
    "(-d --app-root)"{-d,--app-root}"[Procfile directory (default: .)]:direcotry:_directories" \
    "(-f --procfile)"{-f,--procfile}"[Procfile path (default: Procfile)]:file:_files" \
    "*::honcho commands:_honcho"
}


_honcho "$@"
